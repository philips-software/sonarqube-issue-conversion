name: SonarQube Issue Conversion
description: Transform tool output into generic SonarQube format(s)
inputs:
  input:
    description: Single or multiple tool output files to convert
    required: true
  output:
    description: Output file for converted issues
    required: true
  transformation:
    description: Type of transformation to apply (one of gtest-to-generic-execution, mutation-test-to-generic-issue)
    required: true

runs:
  using: composite
  steps:
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: "3.13"

    - if: runner.os != 'Windows'
      shell: bash
      run: |
        echo 'Using transformation: ${{ inputs.transformation }} to convert ${{ inputs.input }} to ${{ inputs.output }}'

        case ${{ inputs.transformation }} in
          'gtest-to-generic-execution')
            python -m pip install lxml
            { echo '<testExecutions version="1">'; python ${GITHUB_ACTION_PATH}/converters/xsltproc ${GITHUB_ACTION_PATH}/converters/gtest-to-generic-execution.xslt ${{ inputs.input }}; echo '</testExecutions>'; } | tee ${{ inputs.output }} > /dev/null
            ;;
          'mutation-test-to-generic-issue')
            ;;
          *)
            echo 'Unknown transformation type: ${{ inputs.transformation }}'
            exit 1
            ;;
        esac

    - if: runner.os == 'Windows'
      shell: powershell
      run: |
        echo "Using transformation: ${{ inputs.transformation }} to convert ${{ inputs.input }} to ${{ inputs.output }}"

        switch ('${{ inputs.transformation }}') {
          'gtest-to-generic-execution' {
            python -m pip install lxml
            echo '<testExecutions version="1">' | Out-File -FilePath ${{ inputs.output }} -Append
            python $env:GITHUB_ACTION_PATH/converters/xsltproc $env:GITHUB_ACTION_PATH/converters/gtest-to-generic-execution.xslt ${{ inputs.input }} | Out-File -FilePath ${{ inputs.output }} -Append
            echo '</testExecutions>' | Out-File -FilePath ${{ inputs.output }} -Append
          }
          'mutation-test-to-generic-issue' {
            # Add Windows-specific logic here
          }
          default {
            echo "Unknown transformation type: ${{ inputs.transformation }}"
            exit 1
          }
        }
